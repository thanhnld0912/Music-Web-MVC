@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<style>
    .graphBox canvas {
        width: 100% !important;
        max-height: 300px;
    }
</style>
<div class="main-content">
    <div class="card-box">
        <div class="cardBox">
            <div class="icon-box">
                <i class="fa-solid fa-circle-user"></i>
            </div>
            <div class="card-content">
                <div class="card-name">Visitors</div>
                <div class="number">@ViewData["ActiveUsers"]</div>
            </div>
        </div>
        <div class="cardBox">
            <div class="icon-box">
                <i class="fa-solid fa-user"></i>
            </div>
            <div class="card-content">

                <div class="card-name">Subcribers</div>
                <div class="number">@ViewData["Users"]</div>
            </div>
        </div>
        <div class="cardBox">
            <div class="icon-box">
                <i class="fa-solid fa-arrow-up"></i>
            </div>
            <div class="card-content">

                <div class="card-name">Upgrade</div>
                <div class="number">@ViewData["Upgrades"]</div>
            </div>
        </div>
    </div>
    <div class="graph-box">
        <div class="graphBox">
            @* <canvas id="my-chart-1"> </canvas> *@
            @* <canvas id="userChart"></canvas> *@
            <canvas id="userChart" width="400" height="200"></canvas>
        </div>
    </div>
</div>
<script>
    const labels = @Html.Raw(Json.Serialize(ViewBag.MonthlyLabels));
    const dataUsers = @Html.Raw(Json.Serialize(ViewBag.MonthlyUsers));
    const dataVIPs = @Html.Raw(Json.Serialize(ViewBag.MonthlyVIPs));
    const dataActive = @Html.Raw(Json.Serialize(ViewBag.MonthlyActive));

    const ctx = document.getElementById('userChart').getContext('2d');

    const userChart = new Chart(ctx, {
        type: 'line',
        data: {
            labels: labels,
            datasets: [
                {
                    label: 'Total Users',
                    data: dataUsers,
                    backgroundColor: 'rgba(70, 130, 250, 0.1)',
                    borderColor: 'rgba(70, 130, 250, 1)',
                    borderWidth: 2,
                    fill: true,
                    tension: 0.4,
                    pointRadius: 4,
                    pointHoverRadius: 6,
                    pointBackgroundColor: 'rgba(70, 130, 250, 1)',
                },
                {
                    label: 'VIP Users',
                    data: dataVIPs,
                    backgroundColor: 'rgba(255, 193, 7, 0.1)',
                    borderColor: 'rgba(255, 193, 7, 1)',
                    borderWidth: 2,
                    fill: true,
                    tension: 0.4,
                    pointRadius: 4,
                    pointHoverRadius: 6,
                    pointBackgroundColor: 'rgba(255, 193, 7, 1)',
                },
                {
                    label: 'Active Users',
                    data: dataActive,
                    backgroundColor: 'rgba(220, 53, 69, 0.1)',
                    borderColor: 'rgba(220, 53, 69, 1)',
                    borderWidth: 2,
                    fill: true,
                    tension: 0.4,
                    pointRadius: 4,
                    pointHoverRadius: 6,
                    pointBackgroundColor: 'rgba(220, 53, 69, 1)',
                }
            ]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    position: 'bottom',
                    labels: {
                        boxWidth: 12,
                        padding: 15
                    }
                },
                tooltip: {
                    backgroundColor: '#fff',
                    titleColor: '#000',
                    bodyColor: '#333',
                    borderColor: '#ddd',
                    borderWidth: 1
                }
            },
            scales: {
                x: {
                    grid: {
                        display: false
                    },
                    ticks: {
                        color: '#666'
                    }
                },
                y: {
                    beginAtZero: true,
                    grid: {
                        color: 'rgba(0, 0, 0, 0.05)'
                    },
                    ticks: {
                        stepSize: 5,
                        color: '#666'
                    }
                }
            },
            animation: {
                duration: 1000,
                easing: 'easeOutQuart'
            }
        }
    });
</script>
